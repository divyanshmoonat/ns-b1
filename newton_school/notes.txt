In React every component always returns an HTML structure.
For every component to show on UI, you have to write the name of the function in pascal case ie Start with a Captial letter eg App, Header etc

Any class of function which returns HTML structure is called a component.

My function redefined

myFunctionRedefined => Camel Case

MyFunctionRedefined => Pascal Case

my_function_redefined => Snake Case


<div class="article"></div> => HTML version
<div className="article"></div> => React version

React doesn't allows a tag to remain open even not an empty tag.

If it is a component, for every js file we'll write a CSS file.

JSX (JavaScript and XML)

Webpack : Module bundler (bundle.js)

https://babeljs.io/
https://webpack.js.org/

"AVOID RUNNING eject COMMAND"


Imperative Way: This way says write and how every thing step by step in the code.
Declarative Way: This way says focus on the output rather than shownig things step by step.

// const arr = [3, 1, 2, 76, 3, 65];
// Imperative way
// let max = 0;
// for (let i = 0; i < arr.length; i++) {
//   if (max < arr[i]) {
//     max = arr[i];
//   }
// }
// console.log(max);

// Declarative way
// console.log(Mat=h.max.apply(this, arr));


--------------------------------------------------------------
12 Feb 2023 : 

Component : Any reusable unit (block of code) in React JS.
2 types : 
1. Class based compoennts
2. Function component

React components have 2 type of extension with their file : js and jsx.

Props (Properties) : Arguments which are passed to a component (function/class based).
Conditional Rendering : Showing UI based on some basic conditions

Anything other than plain text should be written in side {} in JSX.

====VVV IMPORTANTA====
Key : It is a UNIQUE VALUE associated with every DOM Node which react used to identify the node.

Hexa decimal number system : 0-9 A-F
6 digits => #XXXXXX
#RRGGBB
#FF0000 => Red
#00FF00 => Green
#0000FF => Blue
#000000 => Black
#ffffff => White
==============================
15 Feb 2023

hooks

useState();
let [getterVarName, setterFnName] = useState(<initial-value>);

let price = 0;
let total = 100 + 50;
let [price,setPrice] = useState(0);
setPrice(total);

let users = [];
users = [...users,"new item"];
let [users,setUsers] = useState([]);
setUsers([...users, "new item"])

let fName = "";
fName = "John";
let [fName, setFName] = useState("");
setFName("John");

----------------------------------------------------
21 Feb 2023
By passing function as a prop : 

1. Capture the user input in Events component
2. Pass the user input to App component
3. Event will store it into state variable
4. Re-render
----------------------------------------------------
22 Feb 2023

Lifecyle Phases in React :
1. Mounting : First render with initial computations
2. Updation : Every re render
3. Unmounting : When component wipes out from the DOM
-------------------------------------------------
23 Feb 2023
If there are multiple updater functions called for useState() variable, then the updates are batched*.
* Updates are not batched everytime, it depends if they are used in promises

Ways of binding : 
Variable -> Input Field (1 Way binding)
Variable <-> Input Field (2 Way binding)
--------------------------------------------------
27 Feb 2023
Validator : https://www.npmjs.com/package/validator